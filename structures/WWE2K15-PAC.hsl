/*****************************************************************************
 * WWE2K15-PAC.hsl - Structure definitions for the WWE2K15 .pac formats
 * 2048 byte aligned = (datasize)+((2048 - (datasize % 2048)) % 2048)
 *****************************************************************************
 * Revision History:
 *  2015-05-01 - Keshire - original
 */

#include "standard-types.hsl"
#pragma displayname("pac structures")
#pragma fileextensions(".pac")
#pragma byteorder(little_endian)
#pragma maxarray(16384)
#pragma enumsize(4)
#pragma hide()

struct EPK8_HierarchyB
{
	char				unknown[4] ; //Why is this number plaintext??
	char				id[4] ;  //Some type of tag
	ushort				unknown ;
	byte				unknown ;
	uint				size ; 
	byte				unknown ;

} EPK8_HierarchyB ;

struct EPAC_HierarchyB
{
	char				id[4] ;  //Some type of tag
	ushort				unknown ;
	byte				unknown ;
	uint				size ; 
	byte				unknown ;

} EPAC_HierarchyB ;

#pragma show()

struct PAC_HierarchyA
{
	char				id[4] ; //Some type of tag
	ushort				Count ;
	ushort				unknown ;
	uint				unknown ;
	EPAC_HierarchyB		List[Count/3];
	
	switch (__getUDWordAt(0))
	{
		//I don't think Hex Workshop has a way of dynamically adding structures, 
		//Hence the autoparse function
		//This won't work with EPK8's that have multiple hierarchies.
		case 0x43415045:
			EPAC_HierarchyB		List[Count/3]; break;
		case 0x384B5045:
			EPK8_HierarchyB		List[Count/4];	break;
		default:
			break;
	} ;
	
} PAC_HierarchyA ;


struct PAC 
{
	//2048 byte aligned
	char				id[4] ;
	uint				FileListSize ;	//Size of file list
	uint				FileDataSize ;	//Size of data
	uint				unknown ;		//Version 7?
	blob				align[2032] ;
	
	//14336 byte aligned (2048*7)
	//If the file listing is bigger than that I have no idea what will happen
	PAC_HierarchyA		FileList;
	blob				align[14336-FileListSize] ; 
	
	//Each pach is 2048 byte aligned
	blob			data[FileDataSize] ;
	char			unknown[100] ;	// EOP5/plugin version 1.26

	//There is something else going on after this point but it's all mostly null.
} ;

/* this is hex workshop specific but not too hard to convert to c|c++|c# and such */
function AutoParse
{
    uint pos = 0 ; //current position in the file.
    uint end = __getDocSize() ;
	
	//Let's go through this byte by byte
    while (pos < end)
    {
		//header
		uint type = __getUDWordAt(pos);
		uint listSize = __getUDWordAt(pos+4);
		uint dataSize = __getUDWordAt(pos+8);
		uint version = __getUDWordAt(pos+16);
		pos=0x0800; //aligned
		
		//file hierarchy
		while (pos < 0x0800+listSize)
		{
			pos += __addStructureAt(pos, "PAC_HierarchyA", "") ;
		};
		pos=0x4000; //aligned
		
		pos+=dataSize;
		
		//Just end it for now
		pos=end;
    } ;
} 